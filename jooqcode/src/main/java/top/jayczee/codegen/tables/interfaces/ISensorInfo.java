/*
 * This file is generated by jOOQ.
 */
package top.jayczee.codegen.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * 传感器信息
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ISensorInfo extends Serializable {

    /**
     * Setter for <code>graduation.sensor_info.id</code>. 主键
     */
    public void setId(Long value);

    /**
     * Getter for <code>graduation.sensor_info.id</code>. 主键
     */
    public Long getId();

    /**
     * Setter for <code>graduation.sensor_info.create_dt</code>. 创建日时(系统)
     */
    public void setCreateDt(LocalDateTime value);

    /**
     * Getter for <code>graduation.sensor_info.create_dt</code>. 创建日时(系统)
     */
    public LocalDateTime getCreateDt();

    /**
     * Setter for <code>graduation.sensor_info.sensor_name</code>. 传感器名称
     */
    public void setSensorName(String value);

    /**
     * Getter for <code>graduation.sensor_info.sensor_name</code>. 传感器名称
     */
    public String getSensorName();

    /**
     * Setter for <code>graduation.sensor_info.device_id</code>. 设备ID
     */
    public void setDeviceId(Long value);

    /**
     * Getter for <code>graduation.sensor_info.device_id</code>. 设备ID
     */
    public Long getDeviceId();

    /**
     * Setter for <code>graduation.sensor_info.data_type</code>. 传感器类型
     */
    public void setDataType(String value);

    /**
     * Getter for <code>graduation.sensor_info.data_type</code>. 传感器类型
     */
    public String getDataType();

    /**
     * Setter for <code>graduation.sensor_info.is_running</code>. 是否打开
     */
    public void setIsRunning(Boolean value);

    /**
     * Getter for <code>graduation.sensor_info.is_running</code>. 是否打开
     */
    public Boolean getIsRunning();

    /**
     * Setter for <code>graduation.sensor_info.is_delete</code>. 是否已删除
     */
    public void setIsDelete(Boolean value);

    /**
     * Getter for <code>graduation.sensor_info.is_delete</code>. 是否已删除
     */
    public Boolean getIsDelete();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ISensorInfo
     */
    public void from(ISensorInfo from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ISensorInfo
     */
    public <E extends ISensorInfo> E into(E into);
}
