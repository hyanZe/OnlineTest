/*
 * This file is generated by jOOQ.
 */
package top.jayczee.codegen.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import top.jayczee.codegen.tables.DeviceDataTable;
import top.jayczee.codegen.tables.interfaces.IDeviceData;


/**
 * 数据记录
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeviceDataRecord extends UpdatableRecordImpl<DeviceDataRecord> implements Record7<Long, LocalDateTime, String, Long, String, String, Boolean>, IDeviceData {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>graduation.device_data.id</code>. 主键
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>graduation.device_data.id</code>. 主键
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>graduation.device_data.create_dt</code>. 创建日时(系统)
     */
    @Override
    public void setCreateDt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>graduation.device_data.create_dt</code>. 创建日时(系统)
     */
    @Override
    public LocalDateTime getCreateDt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>graduation.device_data.ip</code>. ip地址
     */
    @Override
    public void setIp(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>graduation.device_data.ip</code>. ip地址
     */
    @Override
    public String getIp() {
        return (String) get(2);
    }

    /**
     * Setter for <code>graduation.device_data.device_id</code>. 设备ID
     */
    @Override
    public void setDeviceId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>graduation.device_data.device_id</code>. 设备ID
     */
    @Override
    public Long getDeviceId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>graduation.device_data.data</code>. 数据值
     */
    @Override
    public void setData(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>graduation.device_data.data</code>. 数据值
     */
    @Override
    public String getData() {
        return (String) get(4);
    }

    /**
     * Setter for <code>graduation.device_data.data_type</code>. 数据类型
     */
    @Override
    public void setDataType(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>graduation.device_data.data_type</code>. 数据类型
     */
    @Override
    public String getDataType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>graduation.device_data.is_error</code>. 是否异常
     */
    @Override
    public void setIsError(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>graduation.device_data.is_error</code>. 是否异常
     */
    @Override
    public Boolean getIsError() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, LocalDateTime, String, Long, String, String, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, LocalDateTime, String, Long, String, String, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return DeviceDataTable.DEVICE_DATA.Id;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return DeviceDataTable.DEVICE_DATA.CreateDt;
    }

    @Override
    public Field<String> field3() {
        return DeviceDataTable.DEVICE_DATA.Ip;
    }

    @Override
    public Field<Long> field4() {
        return DeviceDataTable.DEVICE_DATA.DeviceId;
    }

    @Override
    public Field<String> field5() {
        return DeviceDataTable.DEVICE_DATA.Data;
    }

    @Override
    public Field<String> field6() {
        return DeviceDataTable.DEVICE_DATA.DataType;
    }

    @Override
    public Field<Boolean> field7() {
        return DeviceDataTable.DEVICE_DATA.IsError;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateDt();
    }

    @Override
    public String component3() {
        return getIp();
    }

    @Override
    public Long component4() {
        return getDeviceId();
    }

    @Override
    public String component5() {
        return getData();
    }

    @Override
    public String component6() {
        return getDataType();
    }

    @Override
    public Boolean component7() {
        return getIsError();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateDt();
    }

    @Override
    public String value3() {
        return getIp();
    }

    @Override
    public Long value4() {
        return getDeviceId();
    }

    @Override
    public String value5() {
        return getData();
    }

    @Override
    public String value6() {
        return getDataType();
    }

    @Override
    public Boolean value7() {
        return getIsError();
    }

    @Override
    public DeviceDataRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DeviceDataRecord value2(LocalDateTime value) {
        setCreateDt(value);
        return this;
    }

    @Override
    public DeviceDataRecord value3(String value) {
        setIp(value);
        return this;
    }

    @Override
    public DeviceDataRecord value4(Long value) {
        setDeviceId(value);
        return this;
    }

    @Override
    public DeviceDataRecord value5(String value) {
        setData(value);
        return this;
    }

    @Override
    public DeviceDataRecord value6(String value) {
        setDataType(value);
        return this;
    }

    @Override
    public DeviceDataRecord value7(Boolean value) {
        setIsError(value);
        return this;
    }

    @Override
    public DeviceDataRecord values(Long value1, LocalDateTime value2, String value3, Long value4, String value5, String value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDeviceData from) {
        setId(from.getId());
        setCreateDt(from.getCreateDt());
        setIp(from.getIp());
        setDeviceId(from.getDeviceId());
        setData(from.getData());
        setDataType(from.getDataType());
        setIsError(from.getIsError());
    }

    @Override
    public <E extends IDeviceData> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DeviceDataRecord
     */
    public DeviceDataRecord() {
        super(DeviceDataTable.DEVICE_DATA);
    }

    /**
     * Create a detached, initialised DeviceDataRecord
     */
    public DeviceDataRecord(Long id, LocalDateTime createDt, String ip, Long deviceId, String data, String dataType, Boolean isError) {
        super(DeviceDataTable.DEVICE_DATA);

        setId(id);
        setCreateDt(createDt);
        setIp(ip);
        setDeviceId(deviceId);
        setData(data);
        setDataType(dataType);
        setIsError(isError);
    }
}
