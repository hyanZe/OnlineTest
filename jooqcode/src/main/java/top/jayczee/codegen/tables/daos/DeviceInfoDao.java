/*
 * This file is generated by jOOQ.
 */
package top.jayczee.codegen.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import top.jayczee.codegen.tables.DeviceInfoTable;
import top.jayczee.codegen.tables.pojos.DeviceInfo;
import top.jayczee.codegen.tables.records.DeviceInfoRecord;


/**
 * 设备信息
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class DeviceInfoDao extends DAOImpl<DeviceInfoRecord, DeviceInfo, Long> {

    /**
     * Create a new DeviceInfoDao without any configuration
     */
    public DeviceInfoDao() {
        super(DeviceInfoTable.DEVICE_INFO, DeviceInfo.class);
    }

    /**
     * Create a new DeviceInfoDao with an attached configuration
     */
    @Autowired
    public DeviceInfoDao(Configuration configuration) {
        super(DeviceInfoTable.DEVICE_INFO, DeviceInfo.class, configuration);
    }

    @Override
    public Long getId(DeviceInfo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<DeviceInfo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(DeviceInfoTable.DEVICE_INFO.Id, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<DeviceInfo> fetchById(Long... values) {
        return fetch(DeviceInfoTable.DEVICE_INFO.Id, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public DeviceInfo fetchOneById(Long value) {
        return fetchOne(DeviceInfoTable.DEVICE_INFO.Id, value);
    }

    /**
     * Fetch records that have <code>create_dt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<DeviceInfo> fetchRangeOfCreateDt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(DeviceInfoTable.DEVICE_INFO.CreateDt, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_dt IN (values)</code>
     */
    public List<DeviceInfo> fetchByCreateDt(LocalDateTime... values) {
        return fetch(DeviceInfoTable.DEVICE_INFO.CreateDt, values);
    }

    /**
     * Fetch records that have <code>ip BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<DeviceInfo> fetchRangeOfIp(String lowerInclusive, String upperInclusive) {
        return fetchRange(DeviceInfoTable.DEVICE_INFO.Ip, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ip IN (values)</code>
     */
    public List<DeviceInfo> fetchByIp(String... values) {
        return fetch(DeviceInfoTable.DEVICE_INFO.Ip, values);
    }

    /**
     * Fetch records that have <code>device_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<DeviceInfo> fetchRangeOfDeviceName(String lowerInclusive, String upperInclusive) {
        return fetchRange(DeviceInfoTable.DEVICE_INFO.DeviceName, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>device_name IN (values)</code>
     */
    public List<DeviceInfo> fetchByDeviceName(String... values) {
        return fetch(DeviceInfoTable.DEVICE_INFO.DeviceName, values);
    }
}
