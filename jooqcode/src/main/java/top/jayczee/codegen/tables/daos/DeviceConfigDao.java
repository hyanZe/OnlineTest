/*
 * This file is generated by jOOQ.
 */
package top.jayczee.codegen.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import top.jayczee.codegen.tables.DeviceConfigTable;
import top.jayczee.codegen.tables.pojos.DeviceConfig;
import top.jayczee.codegen.tables.records.DeviceConfigRecord;


/**
 * 设备配置表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class DeviceConfigDao extends DAOImpl<DeviceConfigRecord, DeviceConfig, Long> {

    /**
     * Create a new DeviceConfigDao without any configuration
     */
    public DeviceConfigDao() {
        super(DeviceConfigTable.DEVICE_CONFIG, DeviceConfig.class);
    }

    /**
     * Create a new DeviceConfigDao with an attached configuration
     */
    @Autowired
    public DeviceConfigDao(Configuration configuration) {
        super(DeviceConfigTable.DEVICE_CONFIG, DeviceConfig.class, configuration);
    }

    @Override
    public Long getId(DeviceConfig object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<DeviceConfig> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(DeviceConfigTable.DEVICE_CONFIG.Id, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<DeviceConfig> fetchById(Long... values) {
        return fetch(DeviceConfigTable.DEVICE_CONFIG.Id, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public DeviceConfig fetchOneById(Long value) {
        return fetchOne(DeviceConfigTable.DEVICE_CONFIG.Id, value);
    }

    /**
     * Fetch records that have <code>create_dt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<DeviceConfig> fetchRangeOfCreateDt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(DeviceConfigTable.DEVICE_CONFIG.CreateDt, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_dt IN (values)</code>
     */
    public List<DeviceConfig> fetchByCreateDt(LocalDateTime... values) {
        return fetch(DeviceConfigTable.DEVICE_CONFIG.CreateDt, values);
    }

    /**
     * Fetch records that have <code>device_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<DeviceConfig> fetchRangeOfDeviceId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(DeviceConfigTable.DEVICE_CONFIG.DeviceId, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>device_id IN (values)</code>
     */
    public List<DeviceConfig> fetchByDeviceId(Long... values) {
        return fetch(DeviceConfigTable.DEVICE_CONFIG.DeviceId, values);
    }

    /**
     * Fetch records that have <code>config_key BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<DeviceConfig> fetchRangeOfConfigKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(DeviceConfigTable.DEVICE_CONFIG.ConfigKey, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>config_key IN (values)</code>
     */
    public List<DeviceConfig> fetchByConfigKey(String... values) {
        return fetch(DeviceConfigTable.DEVICE_CONFIG.ConfigKey, values);
    }

    /**
     * Fetch records that have <code>config_val BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<DeviceConfig> fetchRangeOfConfigVal(String lowerInclusive, String upperInclusive) {
        return fetchRange(DeviceConfigTable.DEVICE_CONFIG.ConfigVal, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>config_val IN (values)</code>
     */
    public List<DeviceConfig> fetchByConfigVal(String... values) {
        return fetch(DeviceConfigTable.DEVICE_CONFIG.ConfigVal, values);
    }

    /**
     * Fetch records that have <code>is_delete BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<DeviceConfig> fetchRangeOfIsDelete(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(DeviceConfigTable.DEVICE_CONFIG.IsDelete, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_delete IN (values)</code>
     */
    public List<DeviceConfig> fetchByIsDelete(Boolean... values) {
        return fetch(DeviceConfigTable.DEVICE_CONFIG.IsDelete, values);
    }
}
