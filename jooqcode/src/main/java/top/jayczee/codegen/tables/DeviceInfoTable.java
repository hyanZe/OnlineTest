/*
 * This file is generated by jOOQ.
 */
package top.jayczee.codegen.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import top.jayczee.codegen.Graduation;
import top.jayczee.codegen.Keys;
import top.jayczee.codegen.tables.records.DeviceInfoRecord;


/**
 * 设备信息
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeviceInfoTable extends TableImpl<DeviceInfoRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>graduation.device_info</code>
     */
    public static final DeviceInfoTable DEVICE_INFO = new DeviceInfoTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeviceInfoRecord> getRecordType() {
        return DeviceInfoRecord.class;
    }

    /**
     * The column <code>graduation.device_info.id</code>. 主键
     */
    public final TableField<DeviceInfoRecord, Long> Id = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false), this, "主键");

    /**
     * The column <code>graduation.device_info.create_dt</code>. 创建日时(系统)
     */
    public final TableField<DeviceInfoRecord, LocalDateTime> CreateDt = createField(DSL.name("create_dt"), SQLDataType.LOCALDATETIME(3).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP(3)", SQLDataType.LOCALDATETIME)), this, "创建日时(系统)");

    /**
     * The column <code>graduation.device_info.ip</code>. ip地址
     */
    public final TableField<DeviceInfoRecord, String> Ip = createField(DSL.name("ip"), SQLDataType.VARCHAR(200).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "ip地址");

    /**
     * The column <code>graduation.device_info.device_name</code>. 设备名称
     */
    public final TableField<DeviceInfoRecord, String> DeviceName = createField(DSL.name("device_name"), SQLDataType.VARCHAR(200).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "设备名称");

    private DeviceInfoTable(Name alias, Table<DeviceInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeviceInfoTable(Name alias, Table<DeviceInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("设备信息"), TableOptions.table());
    }

    /**
     * Create an aliased <code>graduation.device_info</code> table reference
     */
    public DeviceInfoTable(String alias) {
        this(DSL.name(alias), DEVICE_INFO);
    }

    /**
     * Create an aliased <code>graduation.device_info</code> table reference
     */
    public DeviceInfoTable(Name alias) {
        this(alias, DEVICE_INFO);
    }

    /**
     * Create a <code>graduation.device_info</code> table reference
     */
    public DeviceInfoTable() {
        this(DSL.name("device_info"), null);
    }

    public <O extends Record> DeviceInfoTable(Table<O> child, ForeignKey<O, DeviceInfoRecord> key) {
        super(child, key, DEVICE_INFO);
    }

    @Override
    public Schema getSchema() {
        return Graduation.GRADUATION;
    }

    @Override
    public UniqueKey<DeviceInfoRecord> getPrimaryKey() {
        return Keys.KEY_DEVICE_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<DeviceInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<DeviceInfoRecord>>asList(Keys.KEY_DEVICE_INFO_PRIMARY);
    }

    @Override
    public DeviceInfoTable as(String alias) {
        return new DeviceInfoTable(DSL.name(alias), this);
    }

    @Override
    public DeviceInfoTable as(Name alias) {
        return new DeviceInfoTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DeviceInfoTable rename(String name) {
        return new DeviceInfoTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DeviceInfoTable rename(Name name) {
        return new DeviceInfoTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, LocalDateTime, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
