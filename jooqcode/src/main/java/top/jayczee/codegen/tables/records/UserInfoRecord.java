/*
 * This file is generated by jOOQ.
 */
package top.jayczee.codegen.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import top.jayczee.codegen.tables.UserInfoTable;
import top.jayczee.codegen.tables.interfaces.IUserInfo;


/**
 * 用户信息
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserInfoRecord extends UpdatableRecordImpl<UserInfoRecord> implements Record5<Long, LocalDateTime, String, String, String>, IUserInfo {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>graduation.user_info.id</code>. 主键
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>graduation.user_info.id</code>. 主键
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>graduation.user_info.create_dt</code>. 创建日时(系统)
     */
    @Override
    public void setCreateDt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>graduation.user_info.create_dt</code>. 创建日时(系统)
     */
    @Override
    public LocalDateTime getCreateDt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>graduation.user_info.login_name</code>. 账号
     */
    @Override
    public void setLoginName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>graduation.user_info.login_name</code>. 账号
     */
    @Override
    public String getLoginName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>graduation.user_info.password</code>. 密码
     */
    @Override
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>graduation.user_info.password</code>. 密码
     */
    @Override
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>graduation.user_info.salt</code>. 盐
     */
    @Override
    public void setSalt(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>graduation.user_info.salt</code>. 盐
     */
    @Override
    public String getSalt() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, LocalDateTime, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, LocalDateTime, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserInfoTable.USER_INFO.Id;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return UserInfoTable.USER_INFO.CreateDt;
    }

    @Override
    public Field<String> field3() {
        return UserInfoTable.USER_INFO.LoginName;
    }

    @Override
    public Field<String> field4() {
        return UserInfoTable.USER_INFO.Password;
    }

    @Override
    public Field<String> field5() {
        return UserInfoTable.USER_INFO.Salt;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateDt();
    }

    @Override
    public String component3() {
        return getLoginName();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getSalt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateDt();
    }

    @Override
    public String value3() {
        return getLoginName();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getSalt();
    }

    @Override
    public UserInfoRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserInfoRecord value2(LocalDateTime value) {
        setCreateDt(value);
        return this;
    }

    @Override
    public UserInfoRecord value3(String value) {
        setLoginName(value);
        return this;
    }

    @Override
    public UserInfoRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserInfoRecord value5(String value) {
        setSalt(value);
        return this;
    }

    @Override
    public UserInfoRecord values(Long value1, LocalDateTime value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUserInfo from) {
        setId(from.getId());
        setCreateDt(from.getCreateDt());
        setLoginName(from.getLoginName());
        setPassword(from.getPassword());
        setSalt(from.getSalt());
    }

    @Override
    public <E extends IUserInfo> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserInfoRecord
     */
    public UserInfoRecord() {
        super(UserInfoTable.USER_INFO);
    }

    /**
     * Create a detached, initialised UserInfoRecord
     */
    public UserInfoRecord(Long id, LocalDateTime createDt, String loginName, String password, String salt) {
        super(UserInfoTable.USER_INFO);

        setId(id);
        setCreateDt(createDt);
        setLoginName(loginName);
        setPassword(password);
        setSalt(salt);
    }
}
