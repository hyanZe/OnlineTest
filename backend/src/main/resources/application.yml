spring:
  datasource:
    url: jdbc:mysql://localhost:3307/graduation?useSSL=false
    username: root
    password: zhysb666.
    driver-class-name: com.mysql.cj.jdbc.Driver
    # Hikari 连接池配置
    hikari:
      # 最小空闲链接
      minimum-idle: 10
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 50
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis服务器地址
    host: localhost
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    # password:
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 100000ms
        # 连接池中的最大空闲连接
        max-idle: 50
        # 连接池中的最小空闲连接
        min-idle: 5
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
sa-token:
  # token名称
  token-name: session
  #token有效期
  timeout: 259200
  #token临时有效期
  activity-timeout: 7200
  #同一账号并发登录 false时新登录会把旧的未注销的登录挤下线 同一时间只允许一个登录
  is-concurrent: false
  #输出日志
  is-log: true
  #是否从请求体里读token
  is-read-body: false
  #是否在cookie里读取token false时不读取 而且用户登录时也不会往客户端的cookie里写token
  is-read-cookie: false
  #是否从header里读token 这种方式在cookie被禁用的情况下也能很好使用
  is-read-head: true
  #是否在程序启动时打印字符画 就跟Springboot启动的时候画一个大Springboot一样
  is-print: false

server:
  port: 1212

logging:
  level:
    #JOOQ运行时打印运行的SQL语句
    org.jooq.tools.LoggerListener: DEBUG